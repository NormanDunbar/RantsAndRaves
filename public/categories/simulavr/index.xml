<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Simulavr on Rants and Raves</title>
    <link>http://localhost:1313/RantsAndRaves/categories/simulavr/</link>
    <description>Recent content in Simulavr on Rants and Raves</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>norman@dunbar-it.co.uk (Norman Dunbar)</managingEditor>
    <webMaster>norman@dunbar-it.co.uk (Norman Dunbar)</webMaster>
    <copyright>Â©2024, Norman Dunbar, All Rights Reserved.</copyright>
    <lastBuildDate>Wed, 03 Apr 2024 09:54:00 +0100</lastBuildDate>
    <sy:updateFrequency>daily</sy:updateFrequency>
    
        <atom:link href="http://localhost:1313/RantsAndRaves/categories/simulavr/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Configuring the Arduino IDE to Allow AVR Debugging</title>
        <link>http://localhost:1313/RantsAndRaves/posts/2024/04/configure-arduino-ide-to-allow-avr-debugging/</link>
        <pubDate>Wed, 03 Apr 2024 09:54:00 +0100</pubDate>
        <author>norman@dunbar-it.co.uk (Norman Dunbar)</author>
        <atom:modified>Wed, 03 Apr 2024 09:54:00 +0100</atom:modified>
        <guid>http://localhost:1313/RantsAndRaves/posts/2024/04/configure-arduino-ide-to-allow-avr-debugging/</guid>
        <description>In a previous post I mentioned that the Arduino IDE needed to be setup in order to allow the Sketch-&amp;gt;Optimize for debugging menu option to have any effect. The IDE &amp;ldquo;knows&amp;rdquo; that ATmega328P microcontrollers, as used on the Uno R3, Duemilanove, Nano and so on, do not have actual hardware debugging, so the option has no effect at all.
However, with a little sneaky configuration, we can change things so that we can optimise our code for debugging with avr-gdb and simulAVR as described here.</description>
        
        <dc:creator>Norman Dunbar</dc:creator>
        
        
        
        
        
          
            
              <category>Simulavr</category>
            
          
            
              <category>Debugging</category>
            
          
            
              <category>Arduino</category>
            
          
            
              <category>AVR</category>
            
          
        
        
      </item>
      
      <item>
        <title>Debugging AVR Code with Simulavr</title>
        <link>http://localhost:1313/RantsAndRaves/posts/2023/10/debugging-avr-code-with-simulavr/</link>
        <pubDate>Mon, 23 Oct 2023 16:02:07 +0100</pubDate>
        <author>norman@dunbar-it.co.uk (Norman Dunbar)</author>
        <atom:modified>Mon, 23 Oct 2023 16:02:07 +0100</atom:modified>
        <guid>http://localhost:1313/RantsAndRaves/posts/2023/10/debugging-avr-code-with-simulavr/</guid>
        <description>When writing AVR code, it can be difficult to debug problems, especially when adding Serial.printf() calls means that the bug vanishes! Actually, only Serial.begin() is required to make the bugs vanish.
WARNING: The simulator hangs if you let the code run and there&amp;rsquo;s a delay() call in the code. This may be an artefact of running under gdb &amp;ndash; I have yet to test what happens if I just run the code.</description>
        
        <dc:creator>Norman Dunbar</dc:creator>
        
        
        
        
        
          
            
              <category>Simulavr</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
